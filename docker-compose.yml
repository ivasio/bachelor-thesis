version: '2'


services:

  # flink cluster

  jobmanager:
    image: flink:1.10.0-scala_2.12
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  flink-worker:
    image: flink:1.10.0-scala_2.12
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "jobmanager:jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager

  event_aggregator:
    image: ivasio/event_aggregator
    build:
      dockerfile: event_processing/aggregator/Dockerfile
      context: .
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      REST_ADDRESS: jobmanager
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      POSTGRES_URL: jdbc:postgresql://postgres/thesis
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
    depends_on:
      - kafka
      - postgres

  web-server:
    image: ivasio/thesis-web-server
    build:
      dockerfile: web_server/Dockerfile
      context: .
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres/thesis
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres
    ports:
      - "8888:8080"

  event_publisher:
    image: ivasio/event_publisher
    build:
      dockerfile: event_processing/publisher/Dockerfile
      context: .
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  postgres:
    image: ivasio/postgres
    build:
      dockerfile: Dockerfile-postgres
      context: shared
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: thesis
    ports:
     - "5431:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: DOCKER://kafka:9092,LOCALHOST://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:9092,LOCALHOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,LOCALHOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_CREATE_TOPICS: "source_points:1:1,source_junctions:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
